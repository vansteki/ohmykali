---
- hosts: localhost
  connection: local

  vars_files:
    - ./vars.yml

  vars_prompt:
    - name: disk
      prompt: What is your USB device (eg /dev/sda)?
      private: no

    - name: newDisk
      prompt: What is your USB device new sector (eg /dev/sda3)?
      private: no

    - name: size
      prompt: What size do you want to part (eg 7GiB)?
      private: no

    - name: password1
      prompt: enter your passphrase
      private: yes

    - name: password2
      prompt: enter your passphrase again
      private: yes

  tasks:
    - name: check input
      assert:
        that:
          - disk is truthy
          - newDisk is truthy
          - size is truthy
        fail_msg: "some values are not truthy"
        success_msg: "all values are truthy"
      any_errors_fatal: true

    - name: password1 should match password2
      assert:
        that:
          - password1 == password2
        fail_msg: "passwords are not the sameüôÄ"
        success_msg: "password test success‚úåÔ∏è"

    - name: Check if Kali Image exist
      stat:
        path: "./{{ isoDir | default('./iso', true) }}/{{ isoName | default('kali-linux-2021.1-live-amd64.iso', true) }}"
      register: kaliImage
      tags: iso

    - name: debug
      debug:
        msg: "The Kali image exists"
      when: kaliImage.stat.exists is true
      tags: iso

    - name: debug
      debug:
        msg: "The Kali image is not exists, try to download it now"
      when: kaliImage.stat.exists is false
      tags: iso

    - name: Download Kali image (user mirror)
      get_url:
        url: "{{ userMirrorISO }}"
        dest: "{{ isoDir | default('./iso', true) }}/{{ isoName | default('kali-linux-2021.1-live-amd64.iso', true) }}"
      register: downloadResult
      when: kaliImage.stat.exists is false
      ignore_errors: true
      tags: iso

    - name: Download Kali image (official)
      get_url:
        url: "{{ officialISO | default('http://cdimage.kali.org/kali-2021.1/kali-linux-2021.1-live-amd64.iso', true) }}"
        dest: "{{ isoDir | default('./iso', true) }}/{{ isoName | default('kali-linux-2021.1-live-amd64.iso', true) }}"
      register: downloadResult
      when: downloadResult is failed
      ignore_errors: true
      tags: iso

    - name: Download Kali image (official)
      shell: |
        cd ./iso
        curl -Lo {{ isoName | default('kali-linux-2021.1-live-amd64.iso', true) }} {{ officialISO | default('http://cdimage.kali.org/kali-2021.1/kali-linux-2021.1-live-amd64.iso', true) }}
      register: downloadResult
      when: downloadResult is failed
      ignore_errors: true
      tags: test

    - name: Download Kali image (official mirror)
      get_url:
        url: "{{ officialMirrorISO | default('http://mirror.anigil.com/kali-images/kali-2021.1/kali-linux-2021.1-live-amd64.iso', true) }}"
        dest: "{{ isoDir | default('./iso', true) }}/{{ isoName | default('kali-linux-2021.1-live-amd64.iso', true) }}"
      register: downloadResult
      when: downloadResult is failed
      any_errors_fatal: true
      tags: iso

    - name: debug download downloadResult
      debug:
        var: downloadResult
      tags: iso

    - name: Print message
      debug:
        msg: 'Using disk {{ disk }}, partition size: {{ size }}'
      register: out
    - name: debug message
      debug:
        var: out

    - name: check command
      shell: |
        echo /bin/zsh ./scripts/kali_psrt_encrypt.zsh {{ disk }} {{ newDisk }} {{ size }}
        chmod o+x ./scripts/kali_psrt_encrypt.zsh
      register: out
    - name: debug message
      debug:
        msg: "echo Using this command to prepare your USB: {{ out.stdout }}"

    - name: Adding Persistence to a Kali Linux "Live" USB Drive
      ansible.builtin.expect:
        command: ./scripts/kali_psrt_encrypt.zsh {{ disk }} {{ newDisk }} {{ size }}
        responses:
          (?i)Are you sure?: "YES"
          (?i)Enter passphrase for: "{{ password1 }}"
          (?i)Verify passphrase: "{{ password2 }}"
        timeout: "{{ timeout | default(3000, true) }}"
      register: res
      ignore_errors: true
    - name: debug
      debug:
        var: res.stdout_lines
